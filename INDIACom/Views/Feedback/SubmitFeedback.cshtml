@model INDIACom.Models.FeedbackModel


@{
    Layout = "~/Views/Shared/Layoutweb.cshtml";
}
<link href="~/Content/css/style.css" rel="stylesheet" />
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Submit Feedback</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/Content/css/style.css" rel="stylesheet" />
    <link href="~/Content/css/all.min.css" rel="stylesheet" />
    <link href="~/Content/css/slick.css" rel="stylesheet" />
   
</head>
<body>
    <div class="content-section col-md">

        <h1 style="color: blue;">Submit Feedback</h1>
        <p>Fields marked with <span style="color: red;">*</span> are required.</p>

        @if (ViewBag.Message != null)
        {
            <p style="color: green;"><b>@ViewBag.Message</b></p>
        }

        <form id="feedbackForm">
            <label><span style="color: red;">*</span> Name:</label>
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", required = "required", name = "Name" })

            <label><span style="color: red;">*</span> Email:</label>
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", required = "required", type = "email", name = "Email" })

            <label>Mobile No.:</label>
            @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control", name = "Mobile" })

            <label>Organization:</label>
            @Html.TextBoxFor(m => m.Organization, new { @class = "form-control", name = "Organization" })

            <label>Conference Information:</label>
            @Html.DropDownListFor(m => m.ConferenceInfo, new List<SelectListItem> {
                new SelectListItem { Text = "Excellent", Value = "Excellent" },
                new SelectListItem { Text = "Very Good", Value = "Very Good" },
                new SelectListItem { Text = "Good", Value = "Good" },
                new SelectListItem { Text = "Average", Value = "Average" },
                new SelectListItem { Text = "Poor", Value = "Poor" }
            }, new { @class = "form-control", required = "required", name = "ConferenceInfo" })

            <label>Paper Submission Process:</label>
            @Html.DropDownListFor(m => m.PaperSubmission, new List<SelectListItem> {
                new SelectListItem { Text = "Excellent", Value = "Excellent" },
                new SelectListItem { Text = "Very Good", Value = "Very Good" },
                new SelectListItem { Text = "Good", Value = "Good" },
                new SelectListItem { Text = "Average", Value = "Average" },
                new SelectListItem { Text = "Poor", Value = "Poor" }
            }, new { @class = "form-control", required = "required", name = "PaperSubmission" })

            <label>Registration Procedure:</label>
            @Html.DropDownListFor(m => m.Registration, new List<SelectListItem> {
                new SelectListItem { Text = "Excellent", Value = "Excellent" },
                new SelectListItem { Text = "Very Good", Value = "Very Good" },
                new SelectListItem { Text = "Good", Value = "Good" },
                new SelectListItem { Text = "Average", Value = "Average" },
                new SelectListItem { Text = "Poor", Value = "Poor" }
            }, new { @class = "form-control", required = "required", name = "Registration" })

            <label>Conference Organization:</label>
            @Html.DropDownListFor(m => m.ConferenceOrg, new List<SelectListItem> {
                new SelectListItem { Text = "Excellent", Value = "Excellent" },
                new SelectListItem { Text = "Very Good", Value = "Very Good" },
                new SelectListItem { Text = "Good", Value = "Good" },
                new SelectListItem { Text = "Average", Value = "Average" },
                new SelectListItem { Text = "Poor", Value = "Poor" }
            }, new { @class = "form-control", required = "required", name = "ConferenceOrg" })

            <label>Conference Proceedings:</label>
            @Html.DropDownListFor(m => m.Proceedings, new List<SelectListItem> {
                new SelectListItem { Text = "Excellent", Value = "Excellent" },
                new SelectListItem { Text = "Very Good", Value = "Very Good" },
                new SelectListItem { Text = "Good", Value = "Good" },
                new SelectListItem { Text = "Average", Value = "Average" },
                new SelectListItem { Text = "Poor", Value = "Poor" }
            }, new { @class = "form-control", required = "required", name = "Proceedings" })

            <label>Suggestions / Special Comments:</label>
            @Html.TextAreaFor(m => m.Comments, new { @class = "form-control", name = "Comments" })

            <br />
            <button type="button" id="submitBtn">Submit</button>
            <input type="reset" value="Reset">
        </form>

        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="~/Scripts/bootstrap.min.js"></script>
        <script src="~/Scripts/js/common.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

        <script>


            $(document).ready(function () {



                $("#submitBtn").click(function () {


                    var formData = $("#feedbackForm").serialize(); // Collect form data

                    $("#submitBtn").prop("disabled", true); // Disable button to prevent double submission

                    $.ajax({
                        url: "/Feedback/SubmitFeedback",
                        type: "POST",
                        data: formData,
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: "success",
                                    title: "Success",
                                    text: "Feedback submitted successfully!"
                                }).then(() => {
                                    location.reload(); // Reloads after success
                                });
                            } else {
                                Swal.fire({
                                    icon: "error",
                                    title: "Error",
                                    text: response.message || "Submission failed."
                                });
                                $("#submitBtn").prop("disabled", false); // Re-enable if failed
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX Error:", xhr.responseText);
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: "Something went wrong! " + xhr.responseText
                            });
                            $("#submitBtn").prop("disabled", false);
                        }
                    });
                });

            });

         


        </script>

</body>
</div>
</html>
